services:

  mysql:
    image: mariadb:11.4.2
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  phpmyadmin:
    image: phpmyadmin:5.2.1
    ports:
      - "8080:80"
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: password

  wordpress:
    image: ghcr.io/xwp/stream-wordpress:${WORDPRESS_IMAGE_VERSION:-latest}
    build:
      context: ./local/docker/wordpress
    depends_on:
      - mysql
      - db_phpunit
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html/wp-content/plugins/stream-src # Working directory.
      - ./build:/var/www/html/wp-content/plugins/stream # Built version for testing.
      - ./local/public:/var/www/html # WP core files.
      - ./local/scripts:/var/local/scripts # Let us access the scripts in the container.
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      APACHE_RUN_USER: "#1000" # Ensure Apache can write to the filesystem.
      WP_TESTS_DIR: /var/www/html/wp-content/plugins/stream-src/vendor/wp-phpunit/wp-phpunit
      WP_PHPUNIT__TESTS_CONFIG: /var/www/html/wp-tests-config.php
      SMTPSERVER: mailhog
      EMAIL: local@${DEV_URL:-stream.wpenv.net}

  db_phpunit:
    image: mariadb:11.4.2
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "wordpress_test"
      MYSQL_ROOT_PASSWORD: ""

  # Capture and display all email sent by WordPress.
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"

volumes:
  db_data: {}
  wp_data: {}
